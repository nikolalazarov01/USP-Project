using Microsoft.AspNetCore.Mvc;
<<<<<<< HEAD
using Microsoft.AspNetCore.Mvc.Rendering;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
=======
using Microsoft.AspNetCore.Mvc.ModelBinding;
>>>>>>> 5afd1d0784885cbb0464ce5bc10a5a3937b22849
using USP_Project.Core.Contracts;
using USP_Project.Web.Models.Cars;

namespace USP_Project.Web.Controllers
{
<<<<<<< HEAD
    public class CarsController : Controller
=======
    private readonly ICarsService _carsService;
    
    private const string ErrorsKey = "Errors";

    public CarsController(ICarsService carsService)
        => _carsService = carsService;

    // TODO: Create a view with a form for creating a new Car:
    [HttpGet]
    public async Task<IActionResult> Add()
    {
        var model = new CreateCarInputModel
        {
            AllBrands = (await _carsService.AllBrands()).Select(b => b.Name).ToList(),
            AllModels = (await  _carsService.AllModels()).Select(m => m.Name).ToList(),
        };
        
        return View(model);
    }
    // => View(new CreateCarInputModel());

    [HttpPost]
    public async Task<IActionResult> Add([FromForm] CreateCarInputModel carInputModel)
>>>>>>> 5afd1d0784885cbb0464ce5bc10a5a3937b22849
    {
        private readonly ICarsService _carsService;

        private const string ErrorsKey = "Errors";

        public CarsController(ICarsService carsService)
        {
            _carsService = carsService;
        }

        [HttpGet]
        public IActionResult Add()
        {
            var createCarInputModel = new CreateCarInputModel
            {
                Brands = _carsService.GetAllBrands().Result.Select(b => new SelectListItem
                {
                    Text = b.Name,
                    Value = b.Id.ToString()
                }),
                Models = _carsService.GetAllModels().Result.Select(m => new SelectListItem
                {
                    Text = m.Name,
                    Value = m.Id.ToString()
                })
            };

            return View(createCarInputModel);
        }

        [HttpPost]
        public async Task<IActionResult> Add([FromForm] CreateCarInputModel carInputModel)
        {
            if (!ModelState.IsValid)
            {
                ViewData[ErrorsKey] = ModelState
                    .SelectMany(x =>
                        x.Value?.Errors
                            .Select(e => e.ErrorMessage)
                            ?? Array.Empty<string>());
                return RedirectToAction(nameof(Add));
            }

            var result = await _carsService.CreateAsync(
                carInputModel.BrandId,
                carInputModel.ModelId,
                carInputModel.Extras);

            if (!result.Succeeded)
            {
                ViewData[ErrorsKey] = result.Errors;
                return RedirectToAction(nameof(Add));
            }

            return RedirectToAction(nameof(HomeController.Index), "Home");
        }
    }
}